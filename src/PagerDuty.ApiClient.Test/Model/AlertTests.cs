/* 
 * PagerDuty API
 *
 * This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@pagerduty.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using PagerDuty.ApiClient.Api;
using PagerDuty.ApiClient.Model;
using PagerDuty.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace PagerDuty.ApiClient.Test
{
    /// <summary>
    ///  Class for testing Alert
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class AlertTests
    {
        // TODO uncomment below to declare an instance variable for Alert
        //private Alert instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Alert
            //instance = new Alert();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Alert
        /// </summary>
        [Test]
        public void AlertInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Alert
            //Assert.IsInstanceOfType<Alert> (instance, "variable 'instance' is a Alert");
        }


        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'AlertKey'
        /// </summary>
        [Test]
        public void AlertKeyTest()
        {
            // TODO unit test for the property 'AlertKey'
        }
        /// <summary>
        /// Test the property 'Service'
        /// </summary>
        [Test]
        public void ServiceTest()
        {
            // TODO unit test for the property 'Service'
        }
        /// <summary>
        /// Test the property 'FirstTriggerLogEntry'
        /// </summary>
        [Test]
        public void FirstTriggerLogEntryTest()
        {
            // TODO unit test for the property 'FirstTriggerLogEntry'
        }
        /// <summary>
        /// Test the property 'Incident'
        /// </summary>
        [Test]
        public void IncidentTest()
        {
            // TODO unit test for the property 'Incident'
        }
        /// <summary>
        /// Test the property 'Suppressed'
        /// </summary>
        [Test]
        public void SuppressedTest()
        {
            // TODO unit test for the property 'Suppressed'
        }
        /// <summary>
        /// Test the property 'Severity'
        /// </summary>
        [Test]
        public void SeverityTest()
        {
            // TODO unit test for the property 'Severity'
        }
        /// <summary>
        /// Test the property 'Integration'
        /// </summary>
        [Test]
        public void IntegrationTest()
        {
            // TODO unit test for the property 'Integration'
        }
        /// <summary>
        /// Test the property 'Body'
        /// </summary>
        [Test]
        public void BodyTest()
        {
            // TODO unit test for the property 'Body'
        }

    }

}
