/* 
 * PagerDuty API
 *
 * This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@pagerduty.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using PagerDuty.ApiClient.Api;
using PagerDuty.ApiClient.Model;
using PagerDuty.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace PagerDuty.ApiClient.Test
{
    /// <summary>
    ///  Class for testing Incident
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class IncidentTests
    {
        // TODO uncomment below to declare an instance variable for Incident
        //private Incident instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Incident
            //instance = new Incident();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Incident
        /// </summary>
        [Test]
        public void IncidentInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Incident
            //Assert.IsInstanceOfType<Incident> (instance, "variable 'instance' is a Incident");
        }


        /// <summary>
        /// Test the property 'IncidentNumber'
        /// </summary>
        [Test]
        public void IncidentNumberTest()
        {
            // TODO unit test for the property 'IncidentNumber'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'PendingActions'
        /// </summary>
        [Test]
        public void PendingActionsTest()
        {
            // TODO unit test for the property 'PendingActions'
        }
        /// <summary>
        /// Test the property 'IncidentKey'
        /// </summary>
        [Test]
        public void IncidentKeyTest()
        {
            // TODO unit test for the property 'IncidentKey'
        }
        /// <summary>
        /// Test the property 'Service'
        /// </summary>
        [Test]
        public void ServiceTest()
        {
            // TODO unit test for the property 'Service'
        }
        /// <summary>
        /// Test the property 'Assignments'
        /// </summary>
        [Test]
        public void AssignmentsTest()
        {
            // TODO unit test for the property 'Assignments'
        }
        /// <summary>
        /// Test the property 'AssignedVia'
        /// </summary>
        [Test]
        public void AssignedViaTest()
        {
            // TODO unit test for the property 'AssignedVia'
        }
        /// <summary>
        /// Test the property 'Acknowledgements'
        /// </summary>
        [Test]
        public void AcknowledgementsTest()
        {
            // TODO unit test for the property 'Acknowledgements'
        }
        /// <summary>
        /// Test the property 'LastStatusChangeAt'
        /// </summary>
        [Test]
        public void LastStatusChangeAtTest()
        {
            // TODO unit test for the property 'LastStatusChangeAt'
        }
        /// <summary>
        /// Test the property 'LastStatusChangeBy'
        /// </summary>
        [Test]
        public void LastStatusChangeByTest()
        {
            // TODO unit test for the property 'LastStatusChangeBy'
        }
        /// <summary>
        /// Test the property 'FirstTriggerLogEntry'
        /// </summary>
        [Test]
        public void FirstTriggerLogEntryTest()
        {
            // TODO unit test for the property 'FirstTriggerLogEntry'
        }
        /// <summary>
        /// Test the property 'EscalationPolicy'
        /// </summary>
        [Test]
        public void EscalationPolicyTest()
        {
            // TODO unit test for the property 'EscalationPolicy'
        }
        /// <summary>
        /// Test the property 'Teams'
        /// </summary>
        [Test]
        public void TeamsTest()
        {
            // TODO unit test for the property 'Teams'
        }
        /// <summary>
        /// Test the property 'Priority'
        /// </summary>
        [Test]
        public void PriorityTest()
        {
            // TODO unit test for the property 'Priority'
        }
        /// <summary>
        /// Test the property 'Urgency'
        /// </summary>
        [Test]
        public void UrgencyTest()
        {
            // TODO unit test for the property 'Urgency'
        }
        /// <summary>
        /// Test the property 'ResolveReason'
        /// </summary>
        [Test]
        public void ResolveReasonTest()
        {
            // TODO unit test for the property 'ResolveReason'
        }
        /// <summary>
        /// Test the property 'AlertCounts'
        /// </summary>
        [Test]
        public void AlertCountsTest()
        {
            // TODO unit test for the property 'AlertCounts'
        }
        /// <summary>
        /// Test the property 'ConferenceBridge'
        /// </summary>
        [Test]
        public void ConferenceBridgeTest()
        {
            // TODO unit test for the property 'ConferenceBridge'
        }
        /// <summary>
        /// Test the property 'Body'
        /// </summary>
        [Test]
        public void BodyTest()
        {
            // TODO unit test for the property 'Body'
        }
        /// <summary>
        /// Test the property 'IncidentsResponders'
        /// </summary>
        [Test]
        public void IncidentsRespondersTest()
        {
            // TODO unit test for the property 'IncidentsResponders'
        }
        /// <summary>
        /// Test the property 'ResponderRequests'
        /// </summary>
        [Test]
        public void ResponderRequestsTest()
        {
            // TODO unit test for the property 'ResponderRequests'
        }

    }

}
