/* 
 * PagerDuty API
 *
 * This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@pagerduty.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using PagerDuty.ApiClient.Client;

namespace PagerDuty.ApiClient.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public interface ICustomFieldsApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Create a Field
        /// </summary>
        /// <remarks>
        /// Create a new Field, along with the Field Options if provided. An account may have up to 1000 Fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object CreateCustomFieldsField (string X_EARLY_ACCESS, Object body = null);

        /// <summary>
        /// Create a Field
        /// </summary>
        /// <remarks>
        /// Create a new Field, along with the Field Options if provided. An account may have up to 1000 Fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> CreateCustomFieldsFieldWithHttpInfo (string X_EARLY_ACCESS, Object body = null);
        /// <summary>
        /// Create a Field Configuration
        /// </summary>
        /// <remarks>
        /// Add a new Field Configuration to an existing Schema. A Schema may use at most 20 Fields, and so may have at most 20 Field Configurations.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object CreateCustomFieldsFieldConfiguration (string X_EARLY_ACCESS, string schemaId, Object body = null);

        /// <summary>
        /// Create a Field Configuration
        /// </summary>
        /// <remarks>
        /// Add a new Field Configuration to an existing Schema. A Schema may use at most 20 Fields, and so may have at most 20 Field Configurations.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> CreateCustomFieldsFieldConfigurationWithHttpInfo (string X_EARLY_ACCESS, string schemaId, Object body = null);
        /// <summary>
        /// Create a Field Option
        /// </summary>
        /// <remarks>
        /// Create a new Field Option. Field Options may only be created for Fields where &#x60;fixed_options&#x60; is &#x60;true&#x60;. A Field may have no more than 10 enabled options.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object CreateCustomFieldsFieldOption (string X_EARLY_ACCESS, string fieldId, Object body = null);

        /// <summary>
        /// Create a Field Option
        /// </summary>
        /// <remarks>
        /// Create a new Field Option. Field Options may only be created for Fields where &#x60;fixed_options&#x60; is &#x60;true&#x60;. A Field may have no more than 10 enabled options.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> CreateCustomFieldsFieldOptionWithHttpInfo (string X_EARLY_ACCESS, string fieldId, Object body = null);
        /// <summary>
        /// Create a Schema
        /// </summary>
        /// <remarks>
        /// Create a new Schema, along with the Field Configurations if provided. An account may have up to 100 Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object CreateCustomFieldsSchema (string X_EARLY_ACCESS, Object body = null);

        /// <summary>
        /// Create a Schema
        /// </summary>
        /// <remarks>
        /// Create a new Schema, along with the Field Configurations if provided. An account may have up to 100 Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> CreateCustomFieldsSchemaWithHttpInfo (string X_EARLY_ACCESS, Object body = null);
        /// <summary>
        /// Create a Schema Assignment
        /// </summary>
        /// <remarks>
        /// Assign a new Schema to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object CreateCustomFieldsSchemaAssignment (string X_EARLY_ACCESS, Object body = null);

        /// <summary>
        /// Create a Schema Assignment
        /// </summary>
        /// <remarks>
        /// Assign a new Schema to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> CreateCustomFieldsSchemaAssignmentWithHttpInfo (string X_EARLY_ACCESS, Object body = null);
        /// <summary>
        /// Delete a Field
        /// </summary>
        /// <remarks>
        /// Delete a Field. Fields may not be deleted if they are used by a Field Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        void DeleteCustomFieldsField (string fieldId, string X_EARLY_ACCESS);

        /// <summary>
        /// Delete a Field
        /// </summary>
        /// <remarks>
        /// Delete a Field. Fields may not be deleted if they are used by a Field Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteCustomFieldsFieldWithHttpInfo (string fieldId, string X_EARLY_ACCESS);
        /// <summary>
        /// Delete a Field Configuration
        /// </summary>
        /// <remarks>
        /// Remove a Field Configuration and its associated Field from a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        void DeleteCustomFieldsFieldConfiguration (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS);

        /// <summary>
        /// Delete a Field Configuration
        /// </summary>
        /// <remarks>
        /// Remove a Field Configuration and its associated Field from a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteCustomFieldsFieldConfigurationWithHttpInfo (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS);
        /// <summary>
        /// Delete a Field Option
        /// </summary>
        /// <remarks>
        /// Delete a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        void DeleteCustomFieldsFieldOption (string fieldId, string fieldOptionId, string X_EARLY_ACCESS);

        /// <summary>
        /// Delete a Field Option
        /// </summary>
        /// <remarks>
        /// Delete a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteCustomFieldsFieldOptionWithHttpInfo (string fieldId, string fieldOptionId, string X_EARLY_ACCESS);
        /// <summary>
        /// Delete a Schema
        /// </summary>
        /// <remarks>
        /// Delete a Schema. Schemas may not be deleted if they are in use by any Service.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        void DeleteCustomFieldsSchema (string schemaId, string X_EARLY_ACCESS);

        /// <summary>
        /// Delete a Schema
        /// </summary>
        /// <remarks>
        /// Delete a Schema. Schemas may not be deleted if they are in use by any Service.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteCustomFieldsSchemaWithHttpInfo (string schemaId, string X_EARLY_ACCESS);
        /// <summary>
        /// Remove a Schema Assignment
        /// </summary>
        /// <remarks>
        /// Remove the Schema assigned to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        void DeleteSchemaAssignment (string id, string X_EARLY_ACCESS);

        /// <summary>
        /// Remove a Schema Assignment
        /// </summary>
        /// <remarks>
        /// Remove the Schema assigned to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteSchemaAssignmentWithHttpInfo (string id, string X_EARLY_ACCESS);
        /// <summary>
        /// Get a Field
        /// </summary>
        /// <remarks>
        /// Show detailed information about a field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Object</returns>
        Object GetCustomFieldsField (string fieldId, string X_EARLY_ACCESS, string include = null);

        /// <summary>
        /// Get a Field
        /// </summary>
        /// <remarks>
        /// Show detailed information about a field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> GetCustomFieldsFieldWithHttpInfo (string fieldId, string X_EARLY_ACCESS, string include = null);
        /// <summary>
        /// Get a Field Configuration
        /// </summary>
        /// <remarks>
        /// Show detailed information about a Field Configuration.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Object</returns>
        Object GetCustomFieldsFieldConfiguration (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS, string include = null);

        /// <summary>
        /// Get a Field Configuration
        /// </summary>
        /// <remarks>
        /// Show detailed information about a Field Configuration.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> GetCustomFieldsFieldConfigurationWithHttpInfo (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS, string include = null);
        /// <summary>
        /// Get Field Option
        /// </summary>
        /// <remarks>
        /// Get a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Object</returns>
        Object GetCustomFieldsFieldOption (string fieldId, string fieldOptionId, string X_EARLY_ACCESS);

        /// <summary>
        /// Get Field Option
        /// </summary>
        /// <remarks>
        /// Get a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> GetCustomFieldsFieldOptionWithHttpInfo (string fieldId, string fieldOptionId, string X_EARLY_ACCESS);
        /// <summary>
        /// Get a Schema
        /// </summary>
        /// <remarks>
        /// Get detailed information about a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. Including &#x60;field_configurations&#x60; will also include full field details. (optional)</param>
        /// <returns>Object</returns>
        Object GetCustomFieldsSchema (string schemaId, string X_EARLY_ACCESS, string include = null);

        /// <summary>
        /// Get a Schema
        /// </summary>
        /// <remarks>
        /// Get detailed information about a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. Including &#x60;field_configurations&#x60; will also include full field details. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> GetCustomFieldsSchemaWithHttpInfo (string schemaId, string X_EARLY_ACCESS, string include = null);
        /// <summary>
        /// List Field Configurations
        /// </summary>
        /// <remarks>
        /// List all Field Configurations for the given Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Object</returns>
        Object ListCustomFieldsFieldConfigurations (string schemaId, string X_EARLY_ACCESS, string include = null);

        /// <summary>
        /// List Field Configurations
        /// </summary>
        /// <remarks>
        /// List all Field Configurations for the given Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ListCustomFieldsFieldConfigurationsWithHttpInfo (string schemaId, string X_EARLY_ACCESS, string include = null);
        /// <summary>
        /// List Field Options
        /// </summary>
        /// <remarks>
        /// List all enabled Field Options for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Object</returns>
        Object ListCustomFieldsFieldOptions (string fieldId, string X_EARLY_ACCESS);

        /// <summary>
        /// List Field Options
        /// </summary>
        /// <remarks>
        /// List all enabled Field Options for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ListCustomFieldsFieldOptionsWithHttpInfo (string fieldId, string X_EARLY_ACCESS);
        /// <summary>
        /// List Fields
        /// </summary>
        /// <remarks>
        /// List fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Object</returns>
        Object ListCustomFieldsFields (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null, string include = null);

        /// <summary>
        /// List Fields
        /// </summary>
        /// <remarks>
        /// List fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ListCustomFieldsFieldsWithHttpInfo (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null, string include = null);
        /// <summary>
        /// List Schemas
        /// </summary>
        /// <remarks>
        /// List all Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Object</returns>
        Object ListCustomFieldsSchemas (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);

        /// <summary>
        /// List Schemas
        /// </summary>
        /// <remarks>
        /// List all Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ListCustomFieldsSchemasWithHttpInfo (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);
        /// <summary>
        /// List Schemas using Field
        /// </summary>
        /// <remarks>
        /// List all Schemas using the Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Object</returns>
        Object ListCustomFieldsSchemasUsingField (string fieldId, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);

        /// <summary>
        /// List Schemas using Field
        /// </summary>
        /// <remarks>
        /// List all Schemas using the Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ListCustomFieldsSchemasUsingFieldWithHttpInfo (string fieldId, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);
        /// <summary>
        /// List Schema Assignments
        /// </summary>
        /// <remarks>
        /// List Schema Assignments by &#x60;service_id&#x60; or &#x60;schema_id&#x60;  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">One of service_id or schema_id is required.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Object</returns>
        Object ListSchemaAssignments (Object filter, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);

        /// <summary>
        /// List Schema Assignments
        /// </summary>
        /// <remarks>
        /// List Schema Assignments by &#x60;service_id&#x60; or &#x60;schema_id&#x60;  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">One of service_id or schema_id is required.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> ListSchemaAssignmentsWithHttpInfo (Object filter, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);
        /// <summary>
        /// Update a Field
        /// </summary>
        /// <remarks>
        /// Update a field.  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object UpdateCustomFieldsField (string X_EARLY_ACCESS, string fieldId, Object body = null);

        /// <summary>
        /// Update a Field
        /// </summary>
        /// <remarks>
        /// Update a field.  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> UpdateCustomFieldsFieldWithHttpInfo (string X_EARLY_ACCESS, string fieldId, Object body = null);
        /// <summary>
        /// Update a Field Configuration
        /// </summary>
        /// <remarks>
        /// Update settings for Field Configuration in Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object UpdateCustomFieldsFieldConfiguration (string X_EARLY_ACCESS, string schemaId, string fieldConfigurationId, Object body = null);

        /// <summary>
        /// Update a Field Configuration
        /// </summary>
        /// <remarks>
        /// Update settings for Field Configuration in Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> UpdateCustomFieldsFieldConfigurationWithHttpInfo (string X_EARLY_ACCESS, string schemaId, string fieldConfigurationId, Object body = null);
        /// <summary>
        /// Update a Field Option
        /// </summary>
        /// <remarks>
        /// Update Field Option for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object UpdateCustomFieldsFieldOption (string X_EARLY_ACCESS, string fieldId, string fieldOptionId, Object body = null);

        /// <summary>
        /// Update a Field Option
        /// </summary>
        /// <remarks>
        /// Update Field Option for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> UpdateCustomFieldsFieldOptionWithHttpInfo (string X_EARLY_ACCESS, string fieldId, string fieldOptionId, Object body = null);
        /// <summary>
        /// Update a Schema
        /// </summary>
        /// <remarks>
        /// Update a Schema, along with the Field Configurations if provided.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        Object UpdateCustomFieldsSchema (string X_EARLY_ACCESS, string schemaId, Object body = null);

        /// <summary>
        /// Update a Schema
        /// </summary>
        /// <remarks>
        /// Update a Schema, along with the Field Configurations if provided.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> UpdateCustomFieldsSchemaWithHttpInfo (string X_EARLY_ACCESS, string schemaId, Object body = null);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Create a Field
        /// </summary>
        /// <remarks>
        /// Create a new Field, along with the Field Options if provided. An account may have up to 1000 Fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> CreateCustomFieldsFieldAsync (string X_EARLY_ACCESS, Object body = null);

        /// <summary>
        /// Create a Field
        /// </summary>
        /// <remarks>
        /// Create a new Field, along with the Field Options if provided. An account may have up to 1000 Fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsFieldAsyncWithHttpInfo (string X_EARLY_ACCESS, Object body = null);
        /// <summary>
        /// Create a Field Configuration
        /// </summary>
        /// <remarks>
        /// Add a new Field Configuration to an existing Schema. A Schema may use at most 20 Fields, and so may have at most 20 Field Configurations.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> CreateCustomFieldsFieldConfigurationAsync (string X_EARLY_ACCESS, string schemaId, Object body = null);

        /// <summary>
        /// Create a Field Configuration
        /// </summary>
        /// <remarks>
        /// Add a new Field Configuration to an existing Schema. A Schema may use at most 20 Fields, and so may have at most 20 Field Configurations.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsFieldConfigurationAsyncWithHttpInfo (string X_EARLY_ACCESS, string schemaId, Object body = null);
        /// <summary>
        /// Create a Field Option
        /// </summary>
        /// <remarks>
        /// Create a new Field Option. Field Options may only be created for Fields where &#x60;fixed_options&#x60; is &#x60;true&#x60;. A Field may have no more than 10 enabled options.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> CreateCustomFieldsFieldOptionAsync (string X_EARLY_ACCESS, string fieldId, Object body = null);

        /// <summary>
        /// Create a Field Option
        /// </summary>
        /// <remarks>
        /// Create a new Field Option. Field Options may only be created for Fields where &#x60;fixed_options&#x60; is &#x60;true&#x60;. A Field may have no more than 10 enabled options.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsFieldOptionAsyncWithHttpInfo (string X_EARLY_ACCESS, string fieldId, Object body = null);
        /// <summary>
        /// Create a Schema
        /// </summary>
        /// <remarks>
        /// Create a new Schema, along with the Field Configurations if provided. An account may have up to 100 Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> CreateCustomFieldsSchemaAsync (string X_EARLY_ACCESS, Object body = null);

        /// <summary>
        /// Create a Schema
        /// </summary>
        /// <remarks>
        /// Create a new Schema, along with the Field Configurations if provided. An account may have up to 100 Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsSchemaAsyncWithHttpInfo (string X_EARLY_ACCESS, Object body = null);
        /// <summary>
        /// Create a Schema Assignment
        /// </summary>
        /// <remarks>
        /// Assign a new Schema to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> CreateCustomFieldsSchemaAssignmentAsync (string X_EARLY_ACCESS, Object body = null);

        /// <summary>
        /// Create a Schema Assignment
        /// </summary>
        /// <remarks>
        /// Assign a new Schema to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsSchemaAssignmentAsyncWithHttpInfo (string X_EARLY_ACCESS, Object body = null);
        /// <summary>
        /// Delete a Field
        /// </summary>
        /// <remarks>
        /// Delete a Field. Fields may not be deleted if they are used by a Field Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteCustomFieldsFieldAsync (string fieldId, string X_EARLY_ACCESS);

        /// <summary>
        /// Delete a Field
        /// </summary>
        /// <remarks>
        /// Delete a Field. Fields may not be deleted if they are used by a Field Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCustomFieldsFieldAsyncWithHttpInfo (string fieldId, string X_EARLY_ACCESS);
        /// <summary>
        /// Delete a Field Configuration
        /// </summary>
        /// <remarks>
        /// Remove a Field Configuration and its associated Field from a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteCustomFieldsFieldConfigurationAsync (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS);

        /// <summary>
        /// Delete a Field Configuration
        /// </summary>
        /// <remarks>
        /// Remove a Field Configuration and its associated Field from a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCustomFieldsFieldConfigurationAsyncWithHttpInfo (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS);
        /// <summary>
        /// Delete a Field Option
        /// </summary>
        /// <remarks>
        /// Delete a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteCustomFieldsFieldOptionAsync (string fieldId, string fieldOptionId, string X_EARLY_ACCESS);

        /// <summary>
        /// Delete a Field Option
        /// </summary>
        /// <remarks>
        /// Delete a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCustomFieldsFieldOptionAsyncWithHttpInfo (string fieldId, string fieldOptionId, string X_EARLY_ACCESS);
        /// <summary>
        /// Delete a Schema
        /// </summary>
        /// <remarks>
        /// Delete a Schema. Schemas may not be deleted if they are in use by any Service.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteCustomFieldsSchemaAsync (string schemaId, string X_EARLY_ACCESS);

        /// <summary>
        /// Delete a Schema
        /// </summary>
        /// <remarks>
        /// Delete a Schema. Schemas may not be deleted if they are in use by any Service.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCustomFieldsSchemaAsyncWithHttpInfo (string schemaId, string X_EARLY_ACCESS);
        /// <summary>
        /// Remove a Schema Assignment
        /// </summary>
        /// <remarks>
        /// Remove the Schema assigned to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteSchemaAssignmentAsync (string id, string X_EARLY_ACCESS);

        /// <summary>
        /// Remove a Schema Assignment
        /// </summary>
        /// <remarks>
        /// Remove the Schema assigned to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteSchemaAssignmentAsyncWithHttpInfo (string id, string X_EARLY_ACCESS);
        /// <summary>
        /// Get a Field
        /// </summary>
        /// <remarks>
        /// Show detailed information about a field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> GetCustomFieldsFieldAsync (string fieldId, string X_EARLY_ACCESS, string include = null);

        /// <summary>
        /// Get a Field
        /// </summary>
        /// <remarks>
        /// Show detailed information about a field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetCustomFieldsFieldAsyncWithHttpInfo (string fieldId, string X_EARLY_ACCESS, string include = null);
        /// <summary>
        /// Get a Field Configuration
        /// </summary>
        /// <remarks>
        /// Show detailed information about a Field Configuration.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> GetCustomFieldsFieldConfigurationAsync (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS, string include = null);

        /// <summary>
        /// Get a Field Configuration
        /// </summary>
        /// <remarks>
        /// Show detailed information about a Field Configuration.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetCustomFieldsFieldConfigurationAsyncWithHttpInfo (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS, string include = null);
        /// <summary>
        /// Get Field Option
        /// </summary>
        /// <remarks>
        /// Get a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> GetCustomFieldsFieldOptionAsync (string fieldId, string fieldOptionId, string X_EARLY_ACCESS);

        /// <summary>
        /// Get Field Option
        /// </summary>
        /// <remarks>
        /// Get a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetCustomFieldsFieldOptionAsyncWithHttpInfo (string fieldId, string fieldOptionId, string X_EARLY_ACCESS);
        /// <summary>
        /// Get a Schema
        /// </summary>
        /// <remarks>
        /// Get detailed information about a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. Including &#x60;field_configurations&#x60; will also include full field details. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> GetCustomFieldsSchemaAsync (string schemaId, string X_EARLY_ACCESS, string include = null);

        /// <summary>
        /// Get a Schema
        /// </summary>
        /// <remarks>
        /// Get detailed information about a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. Including &#x60;field_configurations&#x60; will also include full field details. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetCustomFieldsSchemaAsyncWithHttpInfo (string schemaId, string X_EARLY_ACCESS, string include = null);
        /// <summary>
        /// List Field Configurations
        /// </summary>
        /// <remarks>
        /// List all Field Configurations for the given Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ListCustomFieldsFieldConfigurationsAsync (string schemaId, string X_EARLY_ACCESS, string include = null);

        /// <summary>
        /// List Field Configurations
        /// </summary>
        /// <remarks>
        /// List all Field Configurations for the given Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsFieldConfigurationsAsyncWithHttpInfo (string schemaId, string X_EARLY_ACCESS, string include = null);
        /// <summary>
        /// List Field Options
        /// </summary>
        /// <remarks>
        /// List all enabled Field Options for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ListCustomFieldsFieldOptionsAsync (string fieldId, string X_EARLY_ACCESS);

        /// <summary>
        /// List Field Options
        /// </summary>
        /// <remarks>
        /// List all enabled Field Options for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsFieldOptionsAsyncWithHttpInfo (string fieldId, string X_EARLY_ACCESS);
        /// <summary>
        /// List Fields
        /// </summary>
        /// <remarks>
        /// List fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ListCustomFieldsFieldsAsync (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null, string include = null);

        /// <summary>
        /// List Fields
        /// </summary>
        /// <remarks>
        /// List fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsFieldsAsyncWithHttpInfo (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null, string include = null);
        /// <summary>
        /// List Schemas
        /// </summary>
        /// <remarks>
        /// List all Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ListCustomFieldsSchemasAsync (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);

        /// <summary>
        /// List Schemas
        /// </summary>
        /// <remarks>
        /// List all Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsSchemasAsyncWithHttpInfo (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);
        /// <summary>
        /// List Schemas using Field
        /// </summary>
        /// <remarks>
        /// List all Schemas using the Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ListCustomFieldsSchemasUsingFieldAsync (string fieldId, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);

        /// <summary>
        /// List Schemas using Field
        /// </summary>
        /// <remarks>
        /// List all Schemas using the Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsSchemasUsingFieldAsyncWithHttpInfo (string fieldId, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);
        /// <summary>
        /// List Schema Assignments
        /// </summary>
        /// <remarks>
        /// List Schema Assignments by &#x60;service_id&#x60; or &#x60;schema_id&#x60;  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">One of service_id or schema_id is required.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> ListSchemaAssignmentsAsync (Object filter, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);

        /// <summary>
        /// List Schema Assignments
        /// </summary>
        /// <remarks>
        /// List Schema Assignments by &#x60;service_id&#x60; or &#x60;schema_id&#x60;  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">One of service_id or schema_id is required.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ListSchemaAssignmentsAsyncWithHttpInfo (Object filter, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null);
        /// <summary>
        /// Update a Field
        /// </summary>
        /// <remarks>
        /// Update a field.  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> UpdateCustomFieldsFieldAsync (string X_EARLY_ACCESS, string fieldId, Object body = null);

        /// <summary>
        /// Update a Field
        /// </summary>
        /// <remarks>
        /// Update a field.  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> UpdateCustomFieldsFieldAsyncWithHttpInfo (string X_EARLY_ACCESS, string fieldId, Object body = null);
        /// <summary>
        /// Update a Field Configuration
        /// </summary>
        /// <remarks>
        /// Update settings for Field Configuration in Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> UpdateCustomFieldsFieldConfigurationAsync (string X_EARLY_ACCESS, string schemaId, string fieldConfigurationId, Object body = null);

        /// <summary>
        /// Update a Field Configuration
        /// </summary>
        /// <remarks>
        /// Update settings for Field Configuration in Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> UpdateCustomFieldsFieldConfigurationAsyncWithHttpInfo (string X_EARLY_ACCESS, string schemaId, string fieldConfigurationId, Object body = null);
        /// <summary>
        /// Update a Field Option
        /// </summary>
        /// <remarks>
        /// Update Field Option for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> UpdateCustomFieldsFieldOptionAsync (string X_EARLY_ACCESS, string fieldId, string fieldOptionId, Object body = null);

        /// <summary>
        /// Update a Field Option
        /// </summary>
        /// <remarks>
        /// Update Field Option for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> UpdateCustomFieldsFieldOptionAsyncWithHttpInfo (string X_EARLY_ACCESS, string fieldId, string fieldOptionId, Object body = null);
        /// <summary>
        /// Update a Schema
        /// </summary>
        /// <remarks>
        /// Update a Schema, along with the Field Configurations if provided.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> UpdateCustomFieldsSchemaAsync (string X_EARLY_ACCESS, string schemaId, Object body = null);

        /// <summary>
        /// Update a Schema
        /// </summary>
        /// <remarks>
        /// Update a Schema, along with the Field Configurations if provided.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </remarks>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> UpdateCustomFieldsSchemaAsyncWithHttpInfo (string X_EARLY_ACCESS, string schemaId, Object body = null);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public partial class CustomFieldsApi : ICustomFieldsApi
    {
        private PagerDuty.ApiClient.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CustomFieldsApi(String basePath)
        {
            this.Configuration = new PagerDuty.ApiClient.Client.Configuration { BasePath = basePath };

            ExceptionFactory = PagerDuty.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldsApi"/> class
        /// </summary>
        /// <returns></returns>
        public CustomFieldsApi()
        {
            this.Configuration = PagerDuty.ApiClient.Client.Configuration.Default;

            ExceptionFactory = PagerDuty.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomFieldsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CustomFieldsApi(PagerDuty.ApiClient.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = PagerDuty.ApiClient.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = PagerDuty.ApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public PagerDuty.ApiClient.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public PagerDuty.ApiClient.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Create a Field Create a new Field, along with the Field Options if provided. An account may have up to 1000 Fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object CreateCustomFieldsField (string X_EARLY_ACCESS, Object body = null)
        {
             ApiResponse<Object> localVarResponse = CreateCustomFieldsFieldWithHttpInfo(X_EARLY_ACCESS, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Create a Field Create a new Field, along with the Field Options if provided. An account may have up to 1000 Fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > CreateCustomFieldsFieldWithHttpInfo (string X_EARLY_ACCESS, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsField");

            var localVarPath = "/customfields/fields";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Field Create a new Field, along with the Field Options if provided. An account may have up to 1000 Fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> CreateCustomFieldsFieldAsync (string X_EARLY_ACCESS, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await CreateCustomFieldsFieldAsyncWithHttpInfo(X_EARLY_ACCESS, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Create a Field Create a new Field, along with the Field Options if provided. An account may have up to 1000 Fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsFieldAsyncWithHttpInfo (string X_EARLY_ACCESS, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsField");

            var localVarPath = "/customfields/fields";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Field Configuration Add a new Field Configuration to an existing Schema. A Schema may use at most 20 Fields, and so may have at most 20 Field Configurations.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object CreateCustomFieldsFieldConfiguration (string X_EARLY_ACCESS, string schemaId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = CreateCustomFieldsFieldConfigurationWithHttpInfo(X_EARLY_ACCESS, schemaId, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Create a Field Configuration Add a new Field Configuration to an existing Schema. A Schema may use at most 20 Fields, and so may have at most 20 Field Configurations.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > CreateCustomFieldsFieldConfigurationWithHttpInfo (string X_EARLY_ACCESS, string schemaId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsFieldConfiguration");
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->CreateCustomFieldsFieldConfiguration");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsFieldConfiguration", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Field Configuration Add a new Field Configuration to an existing Schema. A Schema may use at most 20 Fields, and so may have at most 20 Field Configurations.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> CreateCustomFieldsFieldConfigurationAsync (string X_EARLY_ACCESS, string schemaId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await CreateCustomFieldsFieldConfigurationAsyncWithHttpInfo(X_EARLY_ACCESS, schemaId, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Create a Field Configuration Add a new Field Configuration to an existing Schema. A Schema may use at most 20 Fields, and so may have at most 20 Field Configurations.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsFieldConfigurationAsyncWithHttpInfo (string X_EARLY_ACCESS, string schemaId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsFieldConfiguration");
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->CreateCustomFieldsFieldConfiguration");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsFieldConfiguration", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Field Option Create a new Field Option. Field Options may only be created for Fields where &#x60;fixed_options&#x60; is &#x60;true&#x60;. A Field may have no more than 10 enabled options.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object CreateCustomFieldsFieldOption (string X_EARLY_ACCESS, string fieldId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = CreateCustomFieldsFieldOptionWithHttpInfo(X_EARLY_ACCESS, fieldId, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Create a Field Option Create a new Field Option. Field Options may only be created for Fields where &#x60;fixed_options&#x60; is &#x60;true&#x60;. A Field may have no more than 10 enabled options.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > CreateCustomFieldsFieldOptionWithHttpInfo (string X_EARLY_ACCESS, string fieldId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsFieldOption");
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->CreateCustomFieldsFieldOption");

            var localVarPath = "/customfields/fields/{field_id}/field_options";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsFieldOption", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Field Option Create a new Field Option. Field Options may only be created for Fields where &#x60;fixed_options&#x60; is &#x60;true&#x60;. A Field may have no more than 10 enabled options.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> CreateCustomFieldsFieldOptionAsync (string X_EARLY_ACCESS, string fieldId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await CreateCustomFieldsFieldOptionAsyncWithHttpInfo(X_EARLY_ACCESS, fieldId, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Create a Field Option Create a new Field Option. Field Options may only be created for Fields where &#x60;fixed_options&#x60; is &#x60;true&#x60;. A Field may have no more than 10 enabled options.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsFieldOptionAsyncWithHttpInfo (string X_EARLY_ACCESS, string fieldId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsFieldOption");
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->CreateCustomFieldsFieldOption");

            var localVarPath = "/customfields/fields/{field_id}/field_options";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsFieldOption", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Schema Create a new Schema, along with the Field Configurations if provided. An account may have up to 100 Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object CreateCustomFieldsSchema (string X_EARLY_ACCESS, Object body = null)
        {
             ApiResponse<Object> localVarResponse = CreateCustomFieldsSchemaWithHttpInfo(X_EARLY_ACCESS, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Create a Schema Create a new Schema, along with the Field Configurations if provided. An account may have up to 100 Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > CreateCustomFieldsSchemaWithHttpInfo (string X_EARLY_ACCESS, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsSchema");

            var localVarPath = "/customfields/schemas";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsSchema", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Schema Create a new Schema, along with the Field Configurations if provided. An account may have up to 100 Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> CreateCustomFieldsSchemaAsync (string X_EARLY_ACCESS, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await CreateCustomFieldsSchemaAsyncWithHttpInfo(X_EARLY_ACCESS, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Create a Schema Create a new Schema, along with the Field Configurations if provided. An account may have up to 100 Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsSchemaAsyncWithHttpInfo (string X_EARLY_ACCESS, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsSchema");

            var localVarPath = "/customfields/schemas";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsSchema", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Schema Assignment Assign a new Schema to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object CreateCustomFieldsSchemaAssignment (string X_EARLY_ACCESS, Object body = null)
        {
             ApiResponse<Object> localVarResponse = CreateCustomFieldsSchemaAssignmentWithHttpInfo(X_EARLY_ACCESS, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Create a Schema Assignment Assign a new Schema to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > CreateCustomFieldsSchemaAssignmentWithHttpInfo (string X_EARLY_ACCESS, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsSchemaAssignment");

            var localVarPath = "/customfields/schema_assignments";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsSchemaAssignment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Create a Schema Assignment Assign a new Schema to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> CreateCustomFieldsSchemaAssignmentAsync (string X_EARLY_ACCESS, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await CreateCustomFieldsSchemaAssignmentAsyncWithHttpInfo(X_EARLY_ACCESS, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Create a Schema Assignment Assign a new Schema to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> CreateCustomFieldsSchemaAssignmentAsyncWithHttpInfo (string X_EARLY_ACCESS, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->CreateCustomFieldsSchemaAssignment");

            var localVarPath = "/customfields/schema_assignments";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("CreateCustomFieldsSchemaAssignment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Delete a Field Delete a Field. Fields may not be deleted if they are used by a Field Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        public void DeleteCustomFieldsField (string fieldId, string X_EARLY_ACCESS)
        {
             DeleteCustomFieldsFieldWithHttpInfo(fieldId, X_EARLY_ACCESS);
        }

        /// <summary>
        /// Delete a Field Delete a Field. Fields may not be deleted if they are used by a Field Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DeleteCustomFieldsFieldWithHttpInfo (string fieldId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->DeleteCustomFieldsField");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteCustomFieldsField");

            var localVarPath = "/customfields/fields/{field_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteCustomFieldsField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Delete a Field Delete a Field. Fields may not be deleted if they are used by a Field Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteCustomFieldsFieldAsync (string fieldId, string X_EARLY_ACCESS)
        {
             await DeleteCustomFieldsFieldAsyncWithHttpInfo(fieldId, X_EARLY_ACCESS);

        }

        /// <summary>
        /// Delete a Field Delete a Field. Fields may not be deleted if they are used by a Field Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCustomFieldsFieldAsyncWithHttpInfo (string fieldId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->DeleteCustomFieldsField");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteCustomFieldsField");

            var localVarPath = "/customfields/fields/{field_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteCustomFieldsField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Delete a Field Configuration Remove a Field Configuration and its associated Field from a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        public void DeleteCustomFieldsFieldConfiguration (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS)
        {
             DeleteCustomFieldsFieldConfigurationWithHttpInfo(schemaId, fieldConfigurationId, X_EARLY_ACCESS);
        }

        /// <summary>
        /// Delete a Field Configuration Remove a Field Configuration and its associated Field from a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DeleteCustomFieldsFieldConfigurationWithHttpInfo (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->DeleteCustomFieldsFieldConfiguration");
            // verify the required parameter 'fieldConfigurationId' is set
            if (fieldConfigurationId == null)
                throw new ApiException(400, "Missing required parameter 'fieldConfigurationId' when calling CustomFieldsApi->DeleteCustomFieldsFieldConfiguration");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteCustomFieldsFieldConfiguration");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations/{field_configuration_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (fieldConfigurationId != null) localVarPathParams.Add("field_configuration_id", this.Configuration.ApiClient.ParameterToString(fieldConfigurationId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteCustomFieldsFieldConfiguration", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Delete a Field Configuration Remove a Field Configuration and its associated Field from a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteCustomFieldsFieldConfigurationAsync (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS)
        {
             await DeleteCustomFieldsFieldConfigurationAsyncWithHttpInfo(schemaId, fieldConfigurationId, X_EARLY_ACCESS);

        }

        /// <summary>
        /// Delete a Field Configuration Remove a Field Configuration and its associated Field from a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCustomFieldsFieldConfigurationAsyncWithHttpInfo (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->DeleteCustomFieldsFieldConfiguration");
            // verify the required parameter 'fieldConfigurationId' is set
            if (fieldConfigurationId == null)
                throw new ApiException(400, "Missing required parameter 'fieldConfigurationId' when calling CustomFieldsApi->DeleteCustomFieldsFieldConfiguration");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteCustomFieldsFieldConfiguration");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations/{field_configuration_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (fieldConfigurationId != null) localVarPathParams.Add("field_configuration_id", this.Configuration.ApiClient.ParameterToString(fieldConfigurationId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteCustomFieldsFieldConfiguration", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Delete a Field Option Delete a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        public void DeleteCustomFieldsFieldOption (string fieldId, string fieldOptionId, string X_EARLY_ACCESS)
        {
             DeleteCustomFieldsFieldOptionWithHttpInfo(fieldId, fieldOptionId, X_EARLY_ACCESS);
        }

        /// <summary>
        /// Delete a Field Option Delete a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DeleteCustomFieldsFieldOptionWithHttpInfo (string fieldId, string fieldOptionId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->DeleteCustomFieldsFieldOption");
            // verify the required parameter 'fieldOptionId' is set
            if (fieldOptionId == null)
                throw new ApiException(400, "Missing required parameter 'fieldOptionId' when calling CustomFieldsApi->DeleteCustomFieldsFieldOption");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteCustomFieldsFieldOption");

            var localVarPath = "/customfields/fields/{field_id}/field_options/{field_option_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (fieldOptionId != null) localVarPathParams.Add("field_option_id", this.Configuration.ApiClient.ParameterToString(fieldOptionId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteCustomFieldsFieldOption", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Delete a Field Option Delete a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteCustomFieldsFieldOptionAsync (string fieldId, string fieldOptionId, string X_EARLY_ACCESS)
        {
             await DeleteCustomFieldsFieldOptionAsyncWithHttpInfo(fieldId, fieldOptionId, X_EARLY_ACCESS);

        }

        /// <summary>
        /// Delete a Field Option Delete a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCustomFieldsFieldOptionAsyncWithHttpInfo (string fieldId, string fieldOptionId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->DeleteCustomFieldsFieldOption");
            // verify the required parameter 'fieldOptionId' is set
            if (fieldOptionId == null)
                throw new ApiException(400, "Missing required parameter 'fieldOptionId' when calling CustomFieldsApi->DeleteCustomFieldsFieldOption");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteCustomFieldsFieldOption");

            var localVarPath = "/customfields/fields/{field_id}/field_options/{field_option_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (fieldOptionId != null) localVarPathParams.Add("field_option_id", this.Configuration.ApiClient.ParameterToString(fieldOptionId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteCustomFieldsFieldOption", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Delete a Schema Delete a Schema. Schemas may not be deleted if they are in use by any Service.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        public void DeleteCustomFieldsSchema (string schemaId, string X_EARLY_ACCESS)
        {
             DeleteCustomFieldsSchemaWithHttpInfo(schemaId, X_EARLY_ACCESS);
        }

        /// <summary>
        /// Delete a Schema Delete a Schema. Schemas may not be deleted if they are in use by any Service.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DeleteCustomFieldsSchemaWithHttpInfo (string schemaId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->DeleteCustomFieldsSchema");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteCustomFieldsSchema");

            var localVarPath = "/customfields/schemas/{schema_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteCustomFieldsSchema", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Delete a Schema Delete a Schema. Schemas may not be deleted if they are in use by any Service.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteCustomFieldsSchemaAsync (string schemaId, string X_EARLY_ACCESS)
        {
             await DeleteCustomFieldsSchemaAsyncWithHttpInfo(schemaId, X_EARLY_ACCESS);

        }

        /// <summary>
        /// Delete a Schema Delete a Schema. Schemas may not be deleted if they are in use by any Service.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteCustomFieldsSchemaAsyncWithHttpInfo (string schemaId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->DeleteCustomFieldsSchema");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteCustomFieldsSchema");

            var localVarPath = "/customfields/schemas/{schema_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteCustomFieldsSchema", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Remove a Schema Assignment Remove the Schema assigned to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns></returns>
        public void DeleteSchemaAssignment (string id, string X_EARLY_ACCESS)
        {
             DeleteSchemaAssignmentWithHttpInfo(id, X_EARLY_ACCESS);
        }

        /// <summary>
        /// Remove a Schema Assignment Remove the Schema assigned to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> DeleteSchemaAssignmentWithHttpInfo (string id, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new ApiException(400, "Missing required parameter 'id' when calling CustomFieldsApi->DeleteSchemaAssignment");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteSchemaAssignment");

            var localVarPath = "/customfields/schema_assignments/{id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarPathParams.Add("id", this.Configuration.ApiClient.ParameterToString(id)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteSchemaAssignment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Remove a Schema Assignment Remove the Schema assigned to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteSchemaAssignmentAsync (string id, string X_EARLY_ACCESS)
        {
             await DeleteSchemaAssignmentAsyncWithHttpInfo(id, X_EARLY_ACCESS);

        }

        /// <summary>
        /// Remove a Schema Assignment Remove the Schema assigned to a service  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The ID of the resource.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> DeleteSchemaAssignmentAsyncWithHttpInfo (string id, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new ApiException(400, "Missing required parameter 'id' when calling CustomFieldsApi->DeleteSchemaAssignment");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->DeleteSchemaAssignment");

            var localVarPath = "/customfields/schema_assignments/{id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarPathParams.Add("id", this.Configuration.ApiClient.ParameterToString(id)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.DELETE, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("DeleteSchemaAssignment", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                null);
        }

        /// <summary>
        /// Get a Field Show detailed information about a field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Object</returns>
        public Object GetCustomFieldsField (string fieldId, string X_EARLY_ACCESS, string include = null)
        {
             ApiResponse<Object> localVarResponse = GetCustomFieldsFieldWithHttpInfo(fieldId, X_EARLY_ACCESS, include);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get a Field Show detailed information about a field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > GetCustomFieldsFieldWithHttpInfo (string fieldId, string X_EARLY_ACCESS, string include = null)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->GetCustomFieldsField");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->GetCustomFieldsField");

            var localVarPath = "/customfields/fields/{field_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCustomFieldsField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Get a Field Show detailed information about a field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> GetCustomFieldsFieldAsync (string fieldId, string X_EARLY_ACCESS, string include = null)
        {
             ApiResponse<Object> localVarResponse = await GetCustomFieldsFieldAsyncWithHttpInfo(fieldId, X_EARLY_ACCESS, include);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get a Field Show detailed information about a field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetCustomFieldsFieldAsyncWithHttpInfo (string fieldId, string X_EARLY_ACCESS, string include = null)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->GetCustomFieldsField");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->GetCustomFieldsField");

            var localVarPath = "/customfields/fields/{field_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCustomFieldsField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Get a Field Configuration Show detailed information about a Field Configuration.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Object</returns>
        public Object GetCustomFieldsFieldConfiguration (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS, string include = null)
        {
             ApiResponse<Object> localVarResponse = GetCustomFieldsFieldConfigurationWithHttpInfo(schemaId, fieldConfigurationId, X_EARLY_ACCESS, include);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get a Field Configuration Show detailed information about a Field Configuration.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > GetCustomFieldsFieldConfigurationWithHttpInfo (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS, string include = null)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->GetCustomFieldsFieldConfiguration");
            // verify the required parameter 'fieldConfigurationId' is set
            if (fieldConfigurationId == null)
                throw new ApiException(400, "Missing required parameter 'fieldConfigurationId' when calling CustomFieldsApi->GetCustomFieldsFieldConfiguration");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->GetCustomFieldsFieldConfiguration");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations/{field_configuration_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (fieldConfigurationId != null) localVarPathParams.Add("field_configuration_id", this.Configuration.ApiClient.ParameterToString(fieldConfigurationId)); // path parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCustomFieldsFieldConfiguration", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Get a Field Configuration Show detailed information about a Field Configuration.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> GetCustomFieldsFieldConfigurationAsync (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS, string include = null)
        {
             ApiResponse<Object> localVarResponse = await GetCustomFieldsFieldConfigurationAsyncWithHttpInfo(schemaId, fieldConfigurationId, X_EARLY_ACCESS, include);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get a Field Configuration Show detailed information about a Field Configuration.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetCustomFieldsFieldConfigurationAsyncWithHttpInfo (string schemaId, string fieldConfigurationId, string X_EARLY_ACCESS, string include = null)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->GetCustomFieldsFieldConfiguration");
            // verify the required parameter 'fieldConfigurationId' is set
            if (fieldConfigurationId == null)
                throw new ApiException(400, "Missing required parameter 'fieldConfigurationId' when calling CustomFieldsApi->GetCustomFieldsFieldConfiguration");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->GetCustomFieldsFieldConfiguration");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations/{field_configuration_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (fieldConfigurationId != null) localVarPathParams.Add("field_configuration_id", this.Configuration.ApiClient.ParameterToString(fieldConfigurationId)); // path parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCustomFieldsFieldConfiguration", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Get Field Option Get a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Object</returns>
        public Object GetCustomFieldsFieldOption (string fieldId, string fieldOptionId, string X_EARLY_ACCESS)
        {
             ApiResponse<Object> localVarResponse = GetCustomFieldsFieldOptionWithHttpInfo(fieldId, fieldOptionId, X_EARLY_ACCESS);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get Field Option Get a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > GetCustomFieldsFieldOptionWithHttpInfo (string fieldId, string fieldOptionId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->GetCustomFieldsFieldOption");
            // verify the required parameter 'fieldOptionId' is set
            if (fieldOptionId == null)
                throw new ApiException(400, "Missing required parameter 'fieldOptionId' when calling CustomFieldsApi->GetCustomFieldsFieldOption");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->GetCustomFieldsFieldOption");

            var localVarPath = "/customfields/fields/{field_id}/field_options/{field_option_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (fieldOptionId != null) localVarPathParams.Add("field_option_id", this.Configuration.ApiClient.ParameterToString(fieldOptionId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCustomFieldsFieldOption", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Get Field Option Get a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> GetCustomFieldsFieldOptionAsync (string fieldId, string fieldOptionId, string X_EARLY_ACCESS)
        {
             ApiResponse<Object> localVarResponse = await GetCustomFieldsFieldOptionAsyncWithHttpInfo(fieldId, fieldOptionId, X_EARLY_ACCESS);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get Field Option Get a Field Option.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetCustomFieldsFieldOptionAsyncWithHttpInfo (string fieldId, string fieldOptionId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->GetCustomFieldsFieldOption");
            // verify the required parameter 'fieldOptionId' is set
            if (fieldOptionId == null)
                throw new ApiException(400, "Missing required parameter 'fieldOptionId' when calling CustomFieldsApi->GetCustomFieldsFieldOption");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->GetCustomFieldsFieldOption");

            var localVarPath = "/customfields/fields/{field_id}/field_options/{field_option_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (fieldOptionId != null) localVarPathParams.Add("field_option_id", this.Configuration.ApiClient.ParameterToString(fieldOptionId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCustomFieldsFieldOption", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Get a Schema Get detailed information about a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. Including &#x60;field_configurations&#x60; will also include full field details. (optional)</param>
        /// <returns>Object</returns>
        public Object GetCustomFieldsSchema (string schemaId, string X_EARLY_ACCESS, string include = null)
        {
             ApiResponse<Object> localVarResponse = GetCustomFieldsSchemaWithHttpInfo(schemaId, X_EARLY_ACCESS, include);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get a Schema Get detailed information about a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. Including &#x60;field_configurations&#x60; will also include full field details. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > GetCustomFieldsSchemaWithHttpInfo (string schemaId, string X_EARLY_ACCESS, string include = null)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->GetCustomFieldsSchema");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->GetCustomFieldsSchema");

            var localVarPath = "/customfields/schemas/{schema_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCustomFieldsSchema", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Get a Schema Get detailed information about a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. Including &#x60;field_configurations&#x60; will also include full field details. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> GetCustomFieldsSchemaAsync (string schemaId, string X_EARLY_ACCESS, string include = null)
        {
             ApiResponse<Object> localVarResponse = await GetCustomFieldsSchemaAsyncWithHttpInfo(schemaId, X_EARLY_ACCESS, include);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get a Schema Get detailed information about a Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. Including &#x60;field_configurations&#x60; will also include full field details. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetCustomFieldsSchemaAsyncWithHttpInfo (string schemaId, string X_EARLY_ACCESS, string include = null)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->GetCustomFieldsSchema");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->GetCustomFieldsSchema");

            var localVarPath = "/customfields/schemas/{schema_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetCustomFieldsSchema", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Field Configurations List all Field Configurations for the given Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Object</returns>
        public Object ListCustomFieldsFieldConfigurations (string schemaId, string X_EARLY_ACCESS, string include = null)
        {
             ApiResponse<Object> localVarResponse = ListCustomFieldsFieldConfigurationsWithHttpInfo(schemaId, X_EARLY_ACCESS, include);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Field Configurations List all Field Configurations for the given Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ListCustomFieldsFieldConfigurationsWithHttpInfo (string schemaId, string X_EARLY_ACCESS, string include = null)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->ListCustomFieldsFieldConfigurations");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsFieldConfigurations");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsFieldConfigurations", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Field Configurations List all Field Configurations for the given Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ListCustomFieldsFieldConfigurationsAsync (string schemaId, string X_EARLY_ACCESS, string include = null)
        {
             ApiResponse<Object> localVarResponse = await ListCustomFieldsFieldConfigurationsAsyncWithHttpInfo(schemaId, X_EARLY_ACCESS, include);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Field Configurations List all Field Configurations for the given Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsFieldConfigurationsAsyncWithHttpInfo (string schemaId, string X_EARLY_ACCESS, string include = null)
        {
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->ListCustomFieldsFieldConfigurations");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsFieldConfigurations");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsFieldConfigurations", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Field Options List all enabled Field Options for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Object</returns>
        public Object ListCustomFieldsFieldOptions (string fieldId, string X_EARLY_ACCESS)
        {
             ApiResponse<Object> localVarResponse = ListCustomFieldsFieldOptionsWithHttpInfo(fieldId, X_EARLY_ACCESS);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Field Options List all enabled Field Options for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ListCustomFieldsFieldOptionsWithHttpInfo (string fieldId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->ListCustomFieldsFieldOptions");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsFieldOptions");

            var localVarPath = "/customfields/fields/{field_id}/field_options";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsFieldOptions", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Field Options List all enabled Field Options for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ListCustomFieldsFieldOptionsAsync (string fieldId, string X_EARLY_ACCESS)
        {
             ApiResponse<Object> localVarResponse = await ListCustomFieldsFieldOptionsAsyncWithHttpInfo(fieldId, X_EARLY_ACCESS);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Field Options List all enabled Field Options for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsFieldOptionsAsyncWithHttpInfo (string fieldId, string X_EARLY_ACCESS)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->ListCustomFieldsFieldOptions");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsFieldOptions");

            var localVarPath = "/customfields/fields/{field_id}/field_options";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsFieldOptions", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Fields List fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Object</returns>
        public Object ListCustomFieldsFields (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null, string include = null)
        {
             ApiResponse<Object> localVarResponse = ListCustomFieldsFieldsWithHttpInfo(X_EARLY_ACCESS, limit, offset, total, include);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Fields List fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ListCustomFieldsFieldsWithHttpInfo (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null, string include = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsFields");

            var localVarPath = "/customfields/fields";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (limit != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (total != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "total", total)); // query parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsFields", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Fields List fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ListCustomFieldsFieldsAsync (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null, string include = null)
        {
             ApiResponse<Object> localVarResponse = await ListCustomFieldsFieldsAsyncWithHttpInfo(X_EARLY_ACCESS, limit, offset, total, include);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Fields List fields.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <param name="include">Array of additional details to include. (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsFieldsAsyncWithHttpInfo (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null, string include = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsFields");

            var localVarPath = "/customfields/fields";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (limit != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (total != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "total", total)); // query parameter
            if (include != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "include[]", include)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsFields", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Schemas List all Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Object</returns>
        public Object ListCustomFieldsSchemas (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
             ApiResponse<Object> localVarResponse = ListCustomFieldsSchemasWithHttpInfo(X_EARLY_ACCESS, limit, offset, total);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Schemas List all Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ListCustomFieldsSchemasWithHttpInfo (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsSchemas");

            var localVarPath = "/customfields/schemas";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (limit != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (total != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "total", total)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsSchemas", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Schemas List all Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ListCustomFieldsSchemasAsync (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
             ApiResponse<Object> localVarResponse = await ListCustomFieldsSchemasAsyncWithHttpInfo(X_EARLY_ACCESS, limit, offset, total);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Schemas List all Schemas.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsSchemasAsyncWithHttpInfo (string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsSchemas");

            var localVarPath = "/customfields/schemas";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (limit != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (total != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "total", total)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsSchemas", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Schemas using Field List all Schemas using the Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Object</returns>
        public Object ListCustomFieldsSchemasUsingField (string fieldId, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
             ApiResponse<Object> localVarResponse = ListCustomFieldsSchemasUsingFieldWithHttpInfo(fieldId, X_EARLY_ACCESS, limit, offset, total);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Schemas using Field List all Schemas using the Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ListCustomFieldsSchemasUsingFieldWithHttpInfo (string fieldId, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->ListCustomFieldsSchemasUsingField");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsSchemasUsingField");

            var localVarPath = "/customfields/fields/{field_id}/schemas";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (limit != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (total != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "total", total)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsSchemasUsingField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Schemas using Field List all Schemas using the Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ListCustomFieldsSchemasUsingFieldAsync (string fieldId, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
             ApiResponse<Object> localVarResponse = await ListCustomFieldsSchemasUsingFieldAsyncWithHttpInfo(fieldId, X_EARLY_ACCESS, limit, offset, total);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Schemas using Field List all Schemas using the Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ListCustomFieldsSchemasUsingFieldAsyncWithHttpInfo (string fieldId, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->ListCustomFieldsSchemasUsingField");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListCustomFieldsSchemasUsingField");

            var localVarPath = "/customfields/fields/{field_id}/schemas";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (limit != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (total != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "total", total)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCustomFieldsSchemasUsingField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Schema Assignments List Schema Assignments by &#x60;service_id&#x60; or &#x60;schema_id&#x60;  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">One of service_id or schema_id is required.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Object</returns>
        public Object ListSchemaAssignments (Object filter, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
             ApiResponse<Object> localVarResponse = ListSchemaAssignmentsWithHttpInfo(filter, X_EARLY_ACCESS, limit, offset, total);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Schema Assignments List Schema Assignments by &#x60;service_id&#x60; or &#x60;schema_id&#x60;  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">One of service_id or schema_id is required.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > ListSchemaAssignmentsWithHttpInfo (Object filter, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
            // verify the required parameter 'filter' is set
            if (filter == null)
                throw new ApiException(400, "Missing required parameter 'filter' when calling CustomFieldsApi->ListSchemaAssignments");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListSchemaAssignments");

            var localVarPath = "/customfields/schema_assignments";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (filter != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "filter", filter)); // query parameter
            if (limit != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (total != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "total", total)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListSchemaAssignments", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// List Schema Assignments List Schema Assignments by &#x60;service_id&#x60; or &#x60;schema_id&#x60;  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">One of service_id or schema_id is required.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> ListSchemaAssignmentsAsync (Object filter, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
             ApiResponse<Object> localVarResponse = await ListSchemaAssignmentsAsyncWithHttpInfo(filter, X_EARLY_ACCESS, limit, offset, total);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Schema Assignments List Schema Assignments by &#x60;service_id&#x60; or &#x60;schema_id&#x60;  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">One of service_id or schema_id is required.</param>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="limit">The number of results per page. (optional)</param>
        /// <param name="offset">Offset to start pagination search results. (optional)</param>
        /// <param name="total">By default the &#x60;total&#x60; field in pagination responses is set to &#x60;null&#x60; to provide the fastest possible response times. Set &#x60;total&#x60; to &#x60;true&#x60; for this field to be populated.  See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.  (optional, default to false)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> ListSchemaAssignmentsAsyncWithHttpInfo (Object filter, string X_EARLY_ACCESS, int? limit = null, int? offset = null, bool? total = null)
        {
            // verify the required parameter 'filter' is set
            if (filter == null)
                throw new ApiException(400, "Missing required parameter 'filter' when calling CustomFieldsApi->ListSchemaAssignments");
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->ListSchemaAssignments");

            var localVarPath = "/customfields/schema_assignments";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (filter != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "filter", filter)); // query parameter
            if (limit != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "limit", limit)); // query parameter
            if (offset != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "offset", offset)); // query parameter
            if (total != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "total", total)); // query parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListSchemaAssignments", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Update a Field Update a field.  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object UpdateCustomFieldsField (string X_EARLY_ACCESS, string fieldId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = UpdateCustomFieldsFieldWithHttpInfo(X_EARLY_ACCESS, fieldId, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Update a Field Update a field.  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > UpdateCustomFieldsFieldWithHttpInfo (string X_EARLY_ACCESS, string fieldId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->UpdateCustomFieldsField");
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->UpdateCustomFieldsField");

            var localVarPath = "/customfields/fields/{field_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateCustomFieldsField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Update a Field Update a field.  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> UpdateCustomFieldsFieldAsync (string X_EARLY_ACCESS, string fieldId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await UpdateCustomFieldsFieldAsyncWithHttpInfo(X_EARLY_ACCESS, fieldId, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Update a Field Update a field.  &lt;!- - theme: warning - -&gt;  &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> UpdateCustomFieldsFieldAsyncWithHttpInfo (string X_EARLY_ACCESS, string fieldId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->UpdateCustomFieldsField");
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->UpdateCustomFieldsField");

            var localVarPath = "/customfields/fields/{field_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateCustomFieldsField", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Update a Field Configuration Update settings for Field Configuration in Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object UpdateCustomFieldsFieldConfiguration (string X_EARLY_ACCESS, string schemaId, string fieldConfigurationId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = UpdateCustomFieldsFieldConfigurationWithHttpInfo(X_EARLY_ACCESS, schemaId, fieldConfigurationId, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Update a Field Configuration Update settings for Field Configuration in Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > UpdateCustomFieldsFieldConfigurationWithHttpInfo (string X_EARLY_ACCESS, string schemaId, string fieldConfigurationId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->UpdateCustomFieldsFieldConfiguration");
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->UpdateCustomFieldsFieldConfiguration");
            // verify the required parameter 'fieldConfigurationId' is set
            if (fieldConfigurationId == null)
                throw new ApiException(400, "Missing required parameter 'fieldConfigurationId' when calling CustomFieldsApi->UpdateCustomFieldsFieldConfiguration");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations/{field_configuration_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (fieldConfigurationId != null) localVarPathParams.Add("field_configuration_id", this.Configuration.ApiClient.ParameterToString(fieldConfigurationId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateCustomFieldsFieldConfiguration", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Update a Field Configuration Update settings for Field Configuration in Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> UpdateCustomFieldsFieldConfigurationAsync (string X_EARLY_ACCESS, string schemaId, string fieldConfigurationId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await UpdateCustomFieldsFieldConfigurationAsyncWithHttpInfo(X_EARLY_ACCESS, schemaId, fieldConfigurationId, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Update a Field Configuration Update settings for Field Configuration in Schema.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="fieldConfigurationId">The ID of the field configuration.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> UpdateCustomFieldsFieldConfigurationAsyncWithHttpInfo (string X_EARLY_ACCESS, string schemaId, string fieldConfigurationId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->UpdateCustomFieldsFieldConfiguration");
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->UpdateCustomFieldsFieldConfiguration");
            // verify the required parameter 'fieldConfigurationId' is set
            if (fieldConfigurationId == null)
                throw new ApiException(400, "Missing required parameter 'fieldConfigurationId' when calling CustomFieldsApi->UpdateCustomFieldsFieldConfiguration");

            var localVarPath = "/customfields/schemas/{schema_id}/field_configurations/{field_configuration_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (fieldConfigurationId != null) localVarPathParams.Add("field_configuration_id", this.Configuration.ApiClient.ParameterToString(fieldConfigurationId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateCustomFieldsFieldConfiguration", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Update a Field Option Update Field Option for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object UpdateCustomFieldsFieldOption (string X_EARLY_ACCESS, string fieldId, string fieldOptionId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = UpdateCustomFieldsFieldOptionWithHttpInfo(X_EARLY_ACCESS, fieldId, fieldOptionId, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Update a Field Option Update Field Option for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > UpdateCustomFieldsFieldOptionWithHttpInfo (string X_EARLY_ACCESS, string fieldId, string fieldOptionId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->UpdateCustomFieldsFieldOption");
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->UpdateCustomFieldsFieldOption");
            // verify the required parameter 'fieldOptionId' is set
            if (fieldOptionId == null)
                throw new ApiException(400, "Missing required parameter 'fieldOptionId' when calling CustomFieldsApi->UpdateCustomFieldsFieldOption");

            var localVarPath = "/customfields/fields/{field_id}/field_options/{field_option_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (fieldOptionId != null) localVarPathParams.Add("field_option_id", this.Configuration.ApiClient.ParameterToString(fieldOptionId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateCustomFieldsFieldOption", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Update a Field Option Update Field Option for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> UpdateCustomFieldsFieldOptionAsync (string X_EARLY_ACCESS, string fieldId, string fieldOptionId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await UpdateCustomFieldsFieldOptionAsyncWithHttpInfo(X_EARLY_ACCESS, fieldId, fieldOptionId, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Update a Field Option Update Field Option for a Field.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="fieldId">The ID of the field.</param>
        /// <param name="fieldOptionId">The ID of the field option.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> UpdateCustomFieldsFieldOptionAsyncWithHttpInfo (string X_EARLY_ACCESS, string fieldId, string fieldOptionId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->UpdateCustomFieldsFieldOption");
            // verify the required parameter 'fieldId' is set
            if (fieldId == null)
                throw new ApiException(400, "Missing required parameter 'fieldId' when calling CustomFieldsApi->UpdateCustomFieldsFieldOption");
            // verify the required parameter 'fieldOptionId' is set
            if (fieldOptionId == null)
                throw new ApiException(400, "Missing required parameter 'fieldOptionId' when calling CustomFieldsApi->UpdateCustomFieldsFieldOption");

            var localVarPath = "/customfields/fields/{field_id}/field_options/{field_option_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (fieldId != null) localVarPathParams.Add("field_id", this.Configuration.ApiClient.ParameterToString(fieldId)); // path parameter
            if (fieldOptionId != null) localVarPathParams.Add("field_option_id", this.Configuration.ApiClient.ParameterToString(fieldOptionId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateCustomFieldsFieldOption", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Update a Schema Update a Schema, along with the Field Configurations if provided.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Object</returns>
        public Object UpdateCustomFieldsSchema (string X_EARLY_ACCESS, string schemaId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = UpdateCustomFieldsSchemaWithHttpInfo(X_EARLY_ACCESS, schemaId, body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Update a Schema Update a Schema, along with the Field Configurations if provided.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public ApiResponse< Object > UpdateCustomFieldsSchemaWithHttpInfo (string X_EARLY_ACCESS, string schemaId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->UpdateCustomFieldsSchema");
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->UpdateCustomFieldsSchema");

            var localVarPath = "/customfields/schemas/{schema_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateCustomFieldsSchema", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

        /// <summary>
        /// Update a Schema Update a Schema, along with the Field Configurations if provided.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> UpdateCustomFieldsSchemaAsync (string X_EARLY_ACCESS, string schemaId, Object body = null)
        {
             ApiResponse<Object> localVarResponse = await UpdateCustomFieldsSchemaAsyncWithHttpInfo(X_EARLY_ACCESS, schemaId, body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Update a Schema Update a Schema, along with the Field Configurations if provided.  &lt;!- - theme: warning - -&gt; &gt; ### Early Access &gt; This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it. 
        /// </summary>
        /// <exception cref="PagerDuty.ApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="X_EARLY_ACCESS">This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change! </param>
        /// <param name="schemaId">The ID of the schema.</param>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> UpdateCustomFieldsSchemaAsyncWithHttpInfo (string X_EARLY_ACCESS, string schemaId, Object body = null)
        {
            // verify the required parameter 'X_EARLY_ACCESS' is set
            if (X_EARLY_ACCESS == null)
                throw new ApiException(400, "Missing required parameter 'X_EARLY_ACCESS' when calling CustomFieldsApi->UpdateCustomFieldsSchema");
            // verify the required parameter 'schemaId' is set
            if (schemaId == null)
                throw new ApiException(400, "Missing required parameter 'schemaId' when calling CustomFieldsApi->UpdateCustomFieldsSchema");

            var localVarPath = "/customfields/schemas/{schema_id}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.AddOrUpdate("Accept", localVarHttpHeaderAccept);

            if (schemaId != null) localVarPathParams.Add("schema_id", this.Configuration.ApiClient.ParameterToString(schemaId)); // path parameter
            if (X_EARLY_ACCESS != null) localVarHeaderParams.AddOrUpdate("X-EARLY-ACCESS", this.Configuration.ApiClient.ParameterToString(X_EARLY_ACCESS)); // header parameter
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }
            // authentication (api_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarHeaderParams["Authorization"] = this.Configuration.GetApiKeyWithPrefix("Authorization");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.PUT, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("UpdateCustomFieldsSchema", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (string) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(string)));
        }

    }
}
