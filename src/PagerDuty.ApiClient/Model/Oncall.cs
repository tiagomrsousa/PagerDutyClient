/* 
 * PagerDuty API
 *
 * This document describes the PagerDuty REST APIs.  For guides and examples please visit our [Documentation.](https://developer.pagerduty.com/docs/get-started/getting-started/)  Our REST APIs are defined in OpenAPI v3.x. You can view the schema at [github.com/PagerDuty/api-schema](https://github.com/PagerDuty/api-schema).  Note that properties in some schemas have fields not shown by default such as `readOnly`, `format`, and `default`. Hover your cursor over the right column that looks like `optional+1` to see the full list of fields. 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@pagerduty.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = PagerDuty.ApiClient.Client.SwaggerDateConverter;

namespace PagerDuty.ApiClient.Model
{
    /// <summary>
    /// Oncall
    /// </summary>
    [DataContract]
        public partial class Oncall :  IEquatable<Oncall>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Oncall" /> class.
        /// </summary>
        /// <param name="escalationPolicy">escalationPolicy.</param>
        /// <param name="user">user.</param>
        /// <param name="schedule">schedule.</param>
        public Oncall(EscalationPolicyReference escalationPolicy = default(EscalationPolicyReference), UserReference user = default(UserReference), ScheduleReference schedule = default(ScheduleReference))
        {
            this.EscalationPolicy = escalationPolicy;
            this.User = user;
            this.Schedule = schedule;
        }
        
        /// <summary>
        /// Gets or Sets EscalationPolicy
        /// </summary>
        [DataMember(Name="escalation_policy", EmitDefaultValue=false)]
        public EscalationPolicyReference EscalationPolicy { get; set; }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public UserReference User { get; set; }

        /// <summary>
        /// Gets or Sets Schedule
        /// </summary>
        [DataMember(Name="schedule", EmitDefaultValue=false)]
        public ScheduleReference Schedule { get; set; }

        /// <summary>
        /// The escalation level for the on-call.
        /// </summary>
        /// <value>The escalation level for the on-call.</value>
        [DataMember(Name="escalation_level", EmitDefaultValue=false)]
        public int? EscalationLevel { get; private set; }

        /// <summary>
        /// The start of the on-call. If &#x60;null&#x60;, the on-call is a permanent user on-call.
        /// </summary>
        /// <value>The start of the on-call. If &#x60;null&#x60;, the on-call is a permanent user on-call.</value>
        [DataMember(Name="start", EmitDefaultValue=false)]
        public DateTime? Start { get; private set; }

        /// <summary>
        /// The end of the on-call. If &#x60;null&#x60;, the user does not go off-call.
        /// </summary>
        /// <value>The end of the on-call. If &#x60;null&#x60;, the user does not go off-call.</value>
        [DataMember(Name="end", EmitDefaultValue=false)]
        public DateTime? End { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Oncall {\n");
            sb.Append("  EscalationPolicy: ").Append(EscalationPolicy).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  Schedule: ").Append(Schedule).Append("\n");
            sb.Append("  EscalationLevel: ").Append(EscalationLevel).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  End: ").Append(End).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Oncall);
        }

        /// <summary>
        /// Returns true if Oncall instances are equal
        /// </summary>
        /// <param name="input">Instance of Oncall to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Oncall input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EscalationPolicy == input.EscalationPolicy ||
                    (this.EscalationPolicy != null &&
                    this.EscalationPolicy.Equals(input.EscalationPolicy))
                ) && 
                (
                    this.User == input.User ||
                    (this.User != null &&
                    this.User.Equals(input.User))
                ) && 
                (
                    this.Schedule == input.Schedule ||
                    (this.Schedule != null &&
                    this.Schedule.Equals(input.Schedule))
                ) && 
                (
                    this.EscalationLevel == input.EscalationLevel ||
                    (this.EscalationLevel != null &&
                    this.EscalationLevel.Equals(input.EscalationLevel))
                ) && 
                (
                    this.Start == input.Start ||
                    (this.Start != null &&
                    this.Start.Equals(input.Start))
                ) && 
                (
                    this.End == input.End ||
                    (this.End != null &&
                    this.End.Equals(input.End))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EscalationPolicy != null)
                    hashCode = hashCode * 59 + this.EscalationPolicy.GetHashCode();
                if (this.User != null)
                    hashCode = hashCode * 59 + this.User.GetHashCode();
                if (this.Schedule != null)
                    hashCode = hashCode * 59 + this.Schedule.GetHashCode();
                if (this.EscalationLevel != null)
                    hashCode = hashCode * 59 + this.EscalationLevel.GetHashCode();
                if (this.Start != null)
                    hashCode = hashCode * 59 + this.Start.GetHashCode();
                if (this.End != null)
                    hashCode = hashCode * 59 + this.End.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
